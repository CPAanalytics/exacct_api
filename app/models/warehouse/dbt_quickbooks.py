from sqlalchemy import BigInteger, Boolean, Column, Date, Double, Integer, MetaData, Numeric, String, Table, Text
from sqlalchemy.orm.base import Mapped

metadata = MetaData()


t_quickbooks__ap_ar_enhanced = Table(
    'quickbooks__ap_ar_enhanced', metadata,
    Column('transaction_type', Text),
    Column('transaction_id', Text),
    Column('source_relation', Text),
    Column('doc_number', Text),
    Column('estimate_id', Text),
    Column('department_name', String(256)),
    Column('transaction_with', Text),
    Column('customer_vendor_name', String(256)),
    Column('customer_vendor_balance', Numeric(21, 9)),
    Column('customer_vendor_address_city', String(256)),
    Column('customer_vendor_address_country', String(256)),
    Column('customer_vendor_address_line', Text),
    Column('customer_vendor_website', String(256)),
    Column('delivery_type', Text),
    Column('estimate_status', Text),
    Column('total_amount', Numeric(38, 18)),
    Column('estimate_amount', Numeric),
    Column('current_balance', Numeric(21, 9)),
    Column('total_current_payment', Numeric),
    Column('due_date', Date),
    Column('is_overdue', Boolean),
    Column('days_overdue', Integer),
    Column('initial_payment_date', Date),
    Column('recent_payment_date', Date),
    
)

t_quickbooks__balance_sheet = Table(
    'quickbooks__balance_sheet', metadata,
    Column('calendar_date', Date),
    Column('source_relation', Text),
    Column('account_class', String),
    Column('class_id', Text),
    Column('is_sub_account', Boolean),
    Column('parent_account_number', Text),
    Column('parent_account_name', String),
    Column('account_type', String),
    Column('account_sub_type', String),
    Column('account_number', Text),
    Column('account_id', Text),
    Column('account_name', String),
    Column('amount', Numeric),
    Column('account_ordinal', Integer),
    
)

t_quickbooks__cash_flow_statement = Table(
    'quickbooks__cash_flow_statement', metadata,
    Column('cash_flow_period', Date),
    Column('source_relation', Text),
    Column('account_class', String),
    Column('class_id', Text),
    Column('is_sub_account', Boolean),
    Column('parent_account_number', Text),
    Column('parent_account_name', String),
    Column('account_type', String),
    Column('account_sub_type', String),
    Column('account_number', Text),
    Column('account_id', Text),
    Column('account_name', String),
    Column('cash_ending_period', Numeric),
    Column('account_unique_id', Text),
    Column('cash_flow_type', Text),
    Column('cash_flow_ordinal', Integer),
    Column('cash_beginning_period', Numeric),
    Column('cash_net_period', Numeric),
    
)

t_quickbooks__expenses_sales_enhanced = Table(
    'quickbooks__expenses_sales_enhanced', metadata,
    Column('transaction_source', Text),
    Column('transaction_id', Text),
    Column('source_relation', Text),
    Column('transaction_line_id', BigInteger),
    Column('doc_number', Text),
    Column('transaction_type', Text),
    Column('transaction_date', Date),
    Column('item_id', Text),
    Column('item_quantity', Double(53)),
    Column('item_unit_price', Numeric),
    Column('account_id', Text),
    Column('account_name', String(256)),
    Column('account_sub_type', String(256)),
    Column('class_id', Text),
    Column('department_id', Text),
    Column('department_name', String(256)),
    Column('customer_id', Text),
    Column('customer_name', String(256)),
    Column('customer_website', String(256)),
    Column('vendor_id', Text),
    Column('vendor_name', String(256)),
    Column('billable_status', String),
    Column('description', String(256)),
    Column('amount', Numeric),
    Column('total_amount', Numeric),
    
)

t_quickbooks__general_ledger = Table(
    'quickbooks__general_ledger', metadata,
    Column('unique_id', Text),
    Column('transaction_id', Text),
    Column('source_relation', Text),
    Column('transaction_index', BigInteger),
    Column('transaction_date', Date),
    Column('customer_id', Text),
    Column('vendor_id', Text),
    Column('amount', Numeric(21, 9)),
    Column('account_id', Text),
    Column('class_id', Text),
    Column('department_id', Text),
    Column('account_number', Text),
    Column('account_name', String(256)),
    Column('is_sub_account', Boolean),
    Column('parent_account_number', Text),
    Column('parent_account_name', String(256)),
    Column('account_type', String(256)),
    Column('account_sub_type', String(256)),
    Column('financial_statement_helper', Text),
    Column('account_current_balance', Numeric(21, 9)),
    Column('account_class', String),
    Column('transaction_type', Text),
    Column('transaction_source', Text),
    Column('account_transaction_type', Text),
    Column('adjusted_amount', Numeric),
    Column('running_balance', Numeric),
    
)

t_quickbooks__general_ledger_by_period = Table(
    'quickbooks__general_ledger_by_period', metadata,
    Column('account_id', Text),
    Column('source_relation', Text),
    Column('account_number', Text),
    Column('account_name', String),
    Column('is_sub_account', Boolean),
    Column('parent_account_number', Text),
    Column('parent_account_name', String),
    Column('account_type', String),
    Column('account_sub_type', String),
    Column('account_class', String),
    Column('class_id', Text),
    Column('financial_statement_helper', Text),
    Column('date_year', Date),
    Column('period_first_day', Date),
    Column('period_last_day', Date),
    Column('period_net_change', Numeric),
    Column('period_beginning_balance', Numeric),
    Column('period_ending_balance', Numeric),
    Column('account_ordinal', Integer),
    
)

t_quickbooks__profit_and_loss = Table(
    'quickbooks__profit_and_loss', metadata,
    Column('calendar_date', Date),
    Column('source_relation', Text),
    Column('account_class', String),
    Column('class_id', Text),
    Column('is_sub_account', Boolean),
    Column('parent_account_number', Text),
    Column('parent_account_name', String),
    Column('account_type', String),
    Column('account_sub_type', String),
    Column('account_number', Text),
    Column('account_id', Text),
    Column('account_name', String),
    Column('amount', Numeric),
    Column('account_ordinal', Integer),
    
)
